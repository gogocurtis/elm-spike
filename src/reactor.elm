module Reactor exposing (update, view, init, subscriptions)

import Html exposing (div)
import Msg exposing (Msg)
import Debug as D exposing (log)


--
-- Init establishes the basic data structure.
--


init options location =
    let
        a =
            D.log "options" options

        b =
            D.log "location" location

        c =
            D.log "function" "init"
    in
        ( options, Cmd.none )



-- Update is a triggered by a Msg which represents
-- a particular side-effect generated by an actor
--


update model msg =
    let
        a =
            D.log "model" model

        b =
            D.log "msg" msg
    in
        ( {}, Cmd.none )



--
-- view is invoked by updates to the model
--


view model =
    div [] []


subscriptions model =
    Sub.none
